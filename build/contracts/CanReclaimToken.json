{
  "contractName": "CanReclaimToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "reclaimToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x6060604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610509806100536000396000f300606060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806317ffc3201461005c5780638da5cb5b14610095578063f2fde38b146100ea575b600080fd5b341561006757600080fd5b610093600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610123565b005b34156100a057600080fd5b6100a8610290565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100f557600080fd5b610121600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506102b5565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561018057600080fd5b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561022357600080fd5b6102c65a03f1151561023457600080fd5b50505060405180519050905061028c6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff1661040a9092919063ffffffff16565b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561031057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561034c57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15156104b557600080fd5b6102c65a03f115156104c657600080fd5b5050506040518051905015156104d857fe5b5050505600a165627a7a7230582088ece54c437b2052e5a83605ce14a82d7fa9367e34479a94ff927746d2aa63fd0029",
  "deployedBytecode": "0x606060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806317ffc3201461005c5780638da5cb5b14610095578063f2fde38b146100ea575b600080fd5b341561006757600080fd5b610093600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610123565b005b34156100a057600080fd5b6100a8610290565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100f557600080fd5b610121600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506102b5565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561018057600080fd5b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561022357600080fd5b6102c65a03f1151561023457600080fd5b50505060405180519050905061028c6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff1661040a9092919063ffffffff16565b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561031057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561034c57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15156104b557600080fd5b6102c65a03f115156104c657600080fd5b5050506040518051905015156104d857fe5b5050505600a165627a7a7230582088ece54c437b2052e5a83605ce14a82d7fa9367e34479a94ff927746d2aa63fd0029",
  "sourceMap": "382:384:17:-;;;540:10:31;532:5;;:18;;;;;;;;;;;;;;;;;;382:384:17;;;;;;",
  "deployedSourceMap": "382:384:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;599:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;249:20:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1007:187;;;;;;;;;;;;;;;;;;;;;;;;;;;;599:162:17;669:15;703:5:31;;;;;;;;;;;689:19;;:10;:19;;;681:28;;;;;;;;687:5:17;:15;;;703:4;687:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;669:39;;719:34;738:5;;;;;;;;;;;745:7;719:5;:18;;;;:34;;;;;:::i;:::-;599:162;;:::o;249:20:31:-;;;;;;;;;;;;;:::o;1007:187::-;703:5;;;;;;;;;;;689:19;;:10;:19;;;681:28;;;;;;;;1108:1;1088:22;;:8;:22;;;;1080:31;;;;;;;;1150:8;1122:37;;1143:5;;;;;;;;;;;1122:37;;;;;;;;;;;;1178:8;1170:5;;:16;;;;;;;;;;;;;;;;;;1007:187;:::o;381:128:37:-;475:5;:14;;;490:2;494:5;475:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;468:33;;;;;;381:128;;;:::o",
  "source": "pragma solidity ^0.4.19;\r\n\r\nimport \"./Ownable.sol\";\r\nimport \"./ERC20Basic.sol\";\r\nimport \"./SafeERC20.sol\";\r\n\r\n/**\r\n * @title Contracts that should be able to recover tokens\r\n * @author SylTi\r\n * @dev This allow a contract to recover any ERC20 token received in a contract by transferring the balance to the contract owner.\r\n * This will prevent any accidental loss of tokens.\r\n */\r\ncontract CanReclaimToken is Ownable {\r\n    using SafeERC20 for ERC20Basic;\r\n\r\n    /**\r\n    * @dev Reclaim all ERC20Basic compatible tokens\r\n    * @param token ERC20Basic The address of the token contract\r\n    */\r\n    function reclaimToken(ERC20Basic token) external onlyOwner {\r\n        uint256 balance = token.balanceOf(this);\r\n        token.safeTransfer(owner, balance);\r\n    }\r\n\r\n}",
  "sourcePath": "C:\\Users\\DXenu\\Desktop\\box\\demo_contract\\contracts\\zeppelin\\CanReclaimToken.sol",
  "ast": {
    "absolutePath": "/C/Users/DXenu/Desktop/box/demo_contract/contracts/zeppelin/CanReclaimToken.sol",
    "exportedSymbols": {
      "CanReclaimToken": [
        2583
      ]
    },
    "id": 2584,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2552,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:17"
      },
      {
        "absolutePath": "/C/Users/DXenu/Desktop/box/demo_contract/contracts/zeppelin/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 2553,
        "nodeType": "ImportDirective",
        "scope": 2584,
        "sourceUnit": 3395,
        "src": "28:23:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/DXenu/Desktop/box/demo_contract/contracts/zeppelin/ERC20Basic.sol",
        "file": "./ERC20Basic.sol",
        "id": 2554,
        "nodeType": "ImportDirective",
        "scope": 2584,
        "sourceUnit": 2945,
        "src": "53:26:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/DXenu/Desktop/box/demo_contract/contracts/zeppelin/SafeERC20.sol",
        "file": "./SafeERC20.sol",
        "id": 2555,
        "nodeType": "ImportDirective",
        "scope": 2584,
        "sourceUnit": 3918,
        "src": "81:25:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 2556,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3394,
              "src": "410:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$3394",
                "typeString": "contract Ownable"
              }
            },
            "id": 2557,
            "nodeType": "InheritanceSpecifier",
            "src": "410:7:17"
          }
        ],
        "contractDependencies": [
          3394
        ],
        "contractKind": "contract",
        "documentation": "@title Contracts that should be able to recover tokens\r\n@author SylTi\r\n@dev This allow a contract to recover any ERC20 token received in a contract by transferring the balance to the contract owner.\r\nThis will prevent any accidental loss of tokens.\r",
        "fullyImplemented": true,
        "id": 2583,
        "linearizedBaseContracts": [
          2583,
          3394
        ],
        "name": "CanReclaimToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2560,
            "libraryName": {
              "contractScope": null,
              "id": 2558,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3917,
              "src": "431:9:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$3917",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "425:31:17",
            "typeName": {
              "contractScope": null,
              "id": 2559,
              "name": "ERC20Basic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2944,
              "src": "445:10:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Basic_$2944",
                "typeString": "contract ERC20Basic"
              }
            }
          },
          {
            "body": {
              "id": 2581,
              "nodeType": "Block",
              "src": "658:103:17",
              "statements": [
                {
                  "assignments": [
                    2568
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2568,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2582,
                      "src": "669:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2567,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "669:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2573,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2571,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4654,
                        "src": "703:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CanReclaimToken_$2583",
                          "typeString": "contract CanReclaimToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CanReclaimToken_$2583",
                          "typeString": "contract CanReclaimToken"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2569,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2562,
                        "src": "687:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$2944",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 2570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2926,
                      "src": "687:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "687:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "669:39:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2577,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3329,
                        "src": "738:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2578,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2568,
                        "src": "745:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2574,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2562,
                        "src": "719:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$2944",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 2576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3877,
                      "src": "719:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20Basic_$2944_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20Basic_$2944_$",
                        "typeString": "function (contract ERC20Basic,address,uint256)"
                      }
                    },
                    "id": 2579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "719:34:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2580,
                  "nodeType": "ExpressionStatement",
                  "src": "719:34:17"
                }
              ]
            },
            "id": 2582,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 2565,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2564,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3355,
                  "src": "648:9:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "648:9:17"
              }
            ],
            "name": "reclaimToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2562,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 2582,
                  "src": "621:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Basic_$2944",
                    "typeString": "contract ERC20Basic"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2561,
                    "name": "ERC20Basic",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2944,
                    "src": "621:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Basic_$2944",
                      "typeString": "contract ERC20Basic"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "620:18:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 2566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "658:0:17"
            },
            "scope": 2583,
            "src": "599:162:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2584,
        "src": "382:384:17"
      }
    ],
    "src": "0:766:17"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/DXenu/Desktop/box/demo_contract/contracts/zeppelin/CanReclaimToken.sol",
    "exportedSymbols": {
      "CanReclaimToken": [
        2583
      ]
    },
    "id": 2584,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2552,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:17"
      },
      {
        "absolutePath": "/C/Users/DXenu/Desktop/box/demo_contract/contracts/zeppelin/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 2553,
        "nodeType": "ImportDirective",
        "scope": 2584,
        "sourceUnit": 3395,
        "src": "28:23:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/DXenu/Desktop/box/demo_contract/contracts/zeppelin/ERC20Basic.sol",
        "file": "./ERC20Basic.sol",
        "id": 2554,
        "nodeType": "ImportDirective",
        "scope": 2584,
        "sourceUnit": 2945,
        "src": "53:26:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/DXenu/Desktop/box/demo_contract/contracts/zeppelin/SafeERC20.sol",
        "file": "./SafeERC20.sol",
        "id": 2555,
        "nodeType": "ImportDirective",
        "scope": 2584,
        "sourceUnit": 3918,
        "src": "81:25:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 2556,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3394,
              "src": "410:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$3394",
                "typeString": "contract Ownable"
              }
            },
            "id": 2557,
            "nodeType": "InheritanceSpecifier",
            "src": "410:7:17"
          }
        ],
        "contractDependencies": [
          3394
        ],
        "contractKind": "contract",
        "documentation": "@title Contracts that should be able to recover tokens\r\n@author SylTi\r\n@dev This allow a contract to recover any ERC20 token received in a contract by transferring the balance to the contract owner.\r\nThis will prevent any accidental loss of tokens.\r",
        "fullyImplemented": true,
        "id": 2583,
        "linearizedBaseContracts": [
          2583,
          3394
        ],
        "name": "CanReclaimToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2560,
            "libraryName": {
              "contractScope": null,
              "id": 2558,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3917,
              "src": "431:9:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$3917",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "425:31:17",
            "typeName": {
              "contractScope": null,
              "id": 2559,
              "name": "ERC20Basic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2944,
              "src": "445:10:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Basic_$2944",
                "typeString": "contract ERC20Basic"
              }
            }
          },
          {
            "body": {
              "id": 2581,
              "nodeType": "Block",
              "src": "658:103:17",
              "statements": [
                {
                  "assignments": [
                    2568
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2568,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2582,
                      "src": "669:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2567,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "669:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2573,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2571,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4654,
                        "src": "703:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CanReclaimToken_$2583",
                          "typeString": "contract CanReclaimToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CanReclaimToken_$2583",
                          "typeString": "contract CanReclaimToken"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2569,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2562,
                        "src": "687:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$2944",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 2570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2926,
                      "src": "687:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "687:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "669:39:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2577,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3329,
                        "src": "738:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2578,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2568,
                        "src": "745:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2574,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2562,
                        "src": "719:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$2944",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 2576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3877,
                      "src": "719:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20Basic_$2944_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20Basic_$2944_$",
                        "typeString": "function (contract ERC20Basic,address,uint256)"
                      }
                    },
                    "id": 2579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "719:34:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2580,
                  "nodeType": "ExpressionStatement",
                  "src": "719:34:17"
                }
              ]
            },
            "id": 2582,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 2565,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2564,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3355,
                  "src": "648:9:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "648:9:17"
              }
            ],
            "name": "reclaimToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2562,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 2582,
                  "src": "621:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Basic_$2944",
                    "typeString": "contract ERC20Basic"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2561,
                    "name": "ERC20Basic",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2944,
                    "src": "621:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Basic_$2944",
                      "typeString": "contract ERC20Basic"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "620:18:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 2566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "658:0:17"
            },
            "scope": 2583,
            "src": "599:162:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2584,
        "src": "382:384:17"
      }
    ],
    "src": "0:766:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.19+commit.c4cbbb05.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-04-03T19:43:49.124Z"
}