{
  "contractName": "NoOwner",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "reclaimToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "contractAddr",
          "type": "address"
        }
      ],
      "name": "reclaimContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "reclaimEther",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "from_",
          "type": "address"
        },
        {
          "name": "value_",
          "type": "uint256"
        },
        {
          "name": "data_",
          "type": "bytes"
        }
      ],
      "name": "tokenFallback",
      "outputs": [],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "bytecode": "0x6060604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060003414151561005357600080fd5b6107e0806100626000396000f300606060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806317ffc320146100855780632aed7f3f146100be5780638da5cb5b146100f75780639f727c271461014c578063c0ee0b8a14610161578063f2fde38b146101b7575b341561008357600080fd5b005b341561009057600080fd5b6100bc600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506101f0565b005b34156100c957600080fd5b6100f5600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061035d565b005b341561010257600080fd5b61010a610490565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561015757600080fd5b61015f6104b5565b005b341561016c57600080fd5b6101b5600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919080359060200190820180359060200191909192905050610587565b005b34156101c257600080fd5b6101ee600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061058c565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561024d57600080fd5b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15156102f057600080fd5b6102c65a03f1151561030157600080fd5b5050506040518051905090506103596000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff166106e19092919063ffffffff16565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103ba57600080fd5b8190508073ffffffffffffffffffffffffffffffffffffffff1663f2fde38b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b151561047857600080fd5b6102c65a03f1151561048957600080fd5b5050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561051057600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050151561058557fe5b565b600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105e757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561062357600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561078c57600080fd5b6102c65a03f1151561079d57600080fd5b5050506040518051905015156107af57fe5b5050505600a165627a7a72305820e9f340d1fd46dc352e87978d8beae2cb8589cc56729664c5b46fe8e9ef2f0cb80029",
  "deployedBytecode": "0x606060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806317ffc320146100855780632aed7f3f146100be5780638da5cb5b146100f75780639f727c271461014c578063c0ee0b8a14610161578063f2fde38b146101b7575b341561008357600080fd5b005b341561009057600080fd5b6100bc600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506101f0565b005b34156100c957600080fd5b6100f5600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061035d565b005b341561010257600080fd5b61010a610490565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561015757600080fd5b61015f6104b5565b005b341561016c57600080fd5b6101b5600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919080359060200190820180359060200191909192905050610587565b005b34156101c257600080fd5b6101ee600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061058c565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561024d57600080fd5b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15156102f057600080fd5b6102c65a03f1151561030157600080fd5b5050506040518051905090506103596000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff166106e19092919063ffffffff16565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103ba57600080fd5b8190508073ffffffffffffffffffffffffffffffffffffffff1663f2fde38b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b151561047857600080fd5b6102c65a03f1151561048957600080fd5b5050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561051057600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050151561058557fe5b565b600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105e757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561062357600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561078c57600080fd5b6102c65a03f1151561079d57600080fd5b5050506040518051905015156107af57fe5b5050505600a165627a7a72305820e9f340d1fd46dc352e87978d8beae2cb8589cc56729664c5b46fe8e9ef2f0cb80029",
  "sourceMap": "400:64:30:-;;;540:10:31;532:5;;:18;;;;;;;;;;;;;;;;;;1026:1:25;1013:9;:14;1005:23;;;;;;;;400:64:30;;;;;;",
  "deployedSourceMap": "400:64:30:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;599:162:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;503:177:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;249:20:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:94:25;;;;;;;;;;;;;;670:157:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1007:187:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;599:162:17;669:15;703:5:31;;;;;;;;;;;689:19;;:10;:19;;;681:28;;;;;;;;687:5:17;:15;;;703:4;687:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;669:39;;719:34;738:5;;;;;;;;;;;745:7;719:5;:18;;;;:34;;;;;:::i;:::-;599:162;;:::o;503:177:24:-;580:20;703:5:31;;;;;;;;;;;689:19;;:10;:19;;;681:28;;;;;;;;611:12:24;580:44;;635:12;:30;;;666:5;;;;;;;;;;;635:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;503:177;;:::o;249:20:31:-;;;;;;;;;;;;;:::o;1273:94:25:-;703:5:31;;;;;;;;;;;689:19;;:10;:19;;;681:28;;;;;;;;1334:5:25;;;;;;;;;;;:10;;:24;1345:4;:12;;;1334:24;;;;;;;;;;;;;;;;;;;;;;;1327:32;;;;;;1273:94::o;670:157:26:-;811:8;;;1007:187:31;703:5;;;;;;;;;;;689:19;;:10;:19;;;681:28;;;;;;;;1108:1;1088:22;;:8;:22;;;;1080:31;;;;;;;;1150:8;1122:37;;1143:5;;;;;;;;;;;1122:37;;;;;;;;;;;;1178:8;1170:5;;:16;;;;;;;;;;;;;;;;;;1007:187;:::o;381:128:37:-;475:5;:14;;;490:2;494:5;475:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;468:33;;;;;;381:128;;;:::o",
  "source": "pragma solidity ^0.4.19;\r\n\r\nimport \"./HasNoEther.sol\";\r\nimport \"./HasNoTokens.sol\";\r\nimport \"./HasNoContracts.sol\";\r\n\r\n/**\r\n * @title Base contract for contracts that should not own things.\r\n * @author Remco Bloemen <remco@2π.com>\r\n * @dev Solves a class of errors where a contract accidentally becomes owner of Ether, Tokens or\r\n * Owned contracts. See respective base contracts for details.\r\n */\r\ncontract NoOwner is HasNoEther, HasNoTokens, HasNoContracts {\r\n}",
  "sourcePath": "C:\\Users\\DXenu\\Desktop\\box\\demo_contract\\contracts\\zeppelin\\NoOwner.sol",
  "ast": {
    "absolutePath": "/C/Users/DXenu/Desktop/box/demo_contract/contracts/zeppelin/NoOwner.sol",
    "exportedSymbols": {
      "NoOwner": [
        3325
      ]
    },
    "id": 3326,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3315,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:30"
      },
      {
        "absolutePath": "/C/Users/DXenu/Desktop/box/demo_contract/contracts/zeppelin/HasNoEther.sol",
        "file": "./HasNoEther.sol",
        "id": 3316,
        "nodeType": "ImportDirective",
        "scope": 3326,
        "sourceUnit": 3071,
        "src": "28:26:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/DXenu/Desktop/box/demo_contract/contracts/zeppelin/HasNoTokens.sol",
        "file": "./HasNoTokens.sol",
        "id": 3317,
        "nodeType": "ImportDirective",
        "scope": 3326,
        "sourceUnit": 3096,
        "src": "56:27:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/DXenu/Desktop/box/demo_contract/contracts/zeppelin/HasNoContracts.sol",
        "file": "./HasNoContracts.sol",
        "id": 3318,
        "nodeType": "ImportDirective",
        "scope": 3326,
        "sourceUnit": 3036,
        "src": "85:30:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 3319,
              "name": "HasNoEther",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3070,
              "src": "420:10:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HasNoEther_$3070",
                "typeString": "contract HasNoEther"
              }
            },
            "id": 3320,
            "nodeType": "InheritanceSpecifier",
            "src": "420:10:30"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 3321,
              "name": "HasNoTokens",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3095,
              "src": "432:11:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HasNoTokens_$3095",
                "typeString": "contract HasNoTokens"
              }
            },
            "id": 3322,
            "nodeType": "InheritanceSpecifier",
            "src": "432:11:30"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 3323,
              "name": "HasNoContracts",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3035,
              "src": "445:14:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HasNoContracts_$3035",
                "typeString": "contract HasNoContracts"
              }
            },
            "id": 3324,
            "nodeType": "InheritanceSpecifier",
            "src": "445:14:30"
          }
        ],
        "contractDependencies": [
          2583,
          3035,
          3070,
          3095,
          3394
        ],
        "contractKind": "contract",
        "documentation": "@title Base contract for contracts that should not own things.\r\n@author Remco Bloemen <remco@2π.com>\r\n@dev Solves a class of errors where a contract accidentally becomes owner of Ether, Tokens or\r\nOwned contracts. See respective base contracts for details.\r",
        "fullyImplemented": true,
        "id": 3325,
        "linearizedBaseContracts": [
          3325,
          3035,
          3095,
          2583,
          3070,
          3394
        ],
        "name": "NoOwner",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 3326,
        "src": "400:64:30"
      }
    ],
    "src": "0:464:30"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/DXenu/Desktop/box/demo_contract/contracts/zeppelin/NoOwner.sol",
    "exportedSymbols": {
      "NoOwner": [
        3325
      ]
    },
    "id": 3326,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3315,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:30"
      },
      {
        "absolutePath": "/C/Users/DXenu/Desktop/box/demo_contract/contracts/zeppelin/HasNoEther.sol",
        "file": "./HasNoEther.sol",
        "id": 3316,
        "nodeType": "ImportDirective",
        "scope": 3326,
        "sourceUnit": 3071,
        "src": "28:26:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/DXenu/Desktop/box/demo_contract/contracts/zeppelin/HasNoTokens.sol",
        "file": "./HasNoTokens.sol",
        "id": 3317,
        "nodeType": "ImportDirective",
        "scope": 3326,
        "sourceUnit": 3096,
        "src": "56:27:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/DXenu/Desktop/box/demo_contract/contracts/zeppelin/HasNoContracts.sol",
        "file": "./HasNoContracts.sol",
        "id": 3318,
        "nodeType": "ImportDirective",
        "scope": 3326,
        "sourceUnit": 3036,
        "src": "85:30:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 3319,
              "name": "HasNoEther",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3070,
              "src": "420:10:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HasNoEther_$3070",
                "typeString": "contract HasNoEther"
              }
            },
            "id": 3320,
            "nodeType": "InheritanceSpecifier",
            "src": "420:10:30"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 3321,
              "name": "HasNoTokens",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3095,
              "src": "432:11:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HasNoTokens_$3095",
                "typeString": "contract HasNoTokens"
              }
            },
            "id": 3322,
            "nodeType": "InheritanceSpecifier",
            "src": "432:11:30"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 3323,
              "name": "HasNoContracts",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3035,
              "src": "445:14:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HasNoContracts_$3035",
                "typeString": "contract HasNoContracts"
              }
            },
            "id": 3324,
            "nodeType": "InheritanceSpecifier",
            "src": "445:14:30"
          }
        ],
        "contractDependencies": [
          2583,
          3035,
          3070,
          3095,
          3394
        ],
        "contractKind": "contract",
        "documentation": "@title Base contract for contracts that should not own things.\r\n@author Remco Bloemen <remco@2π.com>\r\n@dev Solves a class of errors where a contract accidentally becomes owner of Ether, Tokens or\r\nOwned contracts. See respective base contracts for details.\r",
        "fullyImplemented": true,
        "id": 3325,
        "linearizedBaseContracts": [
          3325,
          3035,
          3095,
          2583,
          3070,
          3394
        ],
        "name": "NoOwner",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 3326,
        "src": "400:64:30"
      }
    ],
    "src": "0:464:30"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.19+commit.c4cbbb05.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-04-03T19:43:49.131Z"
}